const visObject={options:{first_option:{type:"string",label:"My First Option",default:"Default Value"},second_option:{type:"number",label:"My Second Option",default:42}},create:function(t,n){t.innerHTML="<h1>Ready to render!</h1>"},updateAsync:function(t,n,a,e,r,i){var l=20,s=20,o=30,c=40,d=960-c-s,u=500-l-o,p=d3.scaleBand().range([0,d]).padding(.1),f=d3.scaleLinear().range([u,0]);n.innerHTML="";l=d3.select("#vis").append("svg").attr("width",d+c+s).attr("height",u+l+o).append("g").attr("transform","translate("+c+","+l+")");let g=[];t.forEach(function(t){g.push({count:t["game.count"].value,friendly_class:t["game.friendly_class"].value,opponent_class:t["game.opponent_class"].value})}),p.domain(g.map(function(t){return t.friendly_class})),f.domain([0,d3.max(g,function(t){return t.count})]),l.selectAll(".bar").data(g).enter().append("rect").attr("class","bar").attr("style","fill: #6c43e0;").attr("x",function(t){return p(t.friendly_class)}).attr("width",p.bandwidth()).attr("y",function(t){return f(t.count)}).attr("height",function(t){return u-f(t.count)}),l.append("g").attr("transform","translate(0,"+u+")").call(d3.axisBottom(p)),l.append("g").call(d3.axisLeft(f)),i()}};looker.plugins.visualizations.add(visObject);
